// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Anggota {
  id               Int             @id @default(autoincrement())
  kategori         Kategori        @default(SISWA)
  nama             String
  username         String?         @unique
  password         String?
  foto             String?
  telepon          String?
  nomor_induk      String?
  peminjaman       Peminjaman[]
  status_anggota   StatusAnggota   @default(AKTIF)
  bukuSumbangan    BukuSumbangan[]
  dibuat           DateTime        @default(now())
  diperbarui       DateTime        @updatedAt
}

enum Kategori {
  SISWA
  GURU
  ADMIN
}

enum StatusAnggota {
  AKTIF
  TIDAK_AKTIF
}

model Buku{
  id                Int @id       @default(autoincrement())
  nomor_induk       String?
  judul             String
  pengarang         String?
  penerbit          Penerbit?     @relation(fields: [penerbit_id], references: [id])
  penerbit_id       Int?
  isbn              String?       @unique
  tahun_terbit      String?
  harga             Int
  sumber_dana       SumberDana    @relation(fields: [sumber_dana_id], references: [id])
  sumber_dana_id    Int 
  deskripsi_fisik   String?
  tahun_masuk       DateTime?
  eksemplar         Eksemplar[]
  bukuTag           BukuTag[]
  foto              String?
  dibuat            DateTime      @default(now())
  diperbarui        DateTime      @updatedAt
}

model SumberDana{
  id        Int         @id @default(autoincrement())
  nama      String
  buku      Buku[]
}

enum TipeFoto{
  SAMPUL
  DAFTAR_ISI
  SAMPUL_BELAKANG
}

model Tag{
  id        Int         @id @default(autoincrement())
  nama      String      @unique
  bukuTag   BukuTag[]
}

model BukuTag{
  id        Int     @id @default(autoincrement())
  buku      Buku    @relation(fields: [buku_id], references: [id])
  buku_id   Int
  tag       Tag     @relation(fields: [tag_id], references: [id])
  tag_id    Int
}

model Penerbit{
  id        Int         @id @default(autoincrement())
  nama      String
  buku      Buku[]
}

model Eksemplar{
  id                Int                   @id @default(autoincrement())
  buku              Buku                  @relation(fields: [buku_id], references: [id])
  buku_id           Int 
  status_buku       StatusBuku            @default(TERSEDIA)
  keterangan        String? 
  foto_bukti        String? 
  detailTransaksi   DetailTransaksi?
  dibuat            DateTime              @default(now())
  diperbarui        DateTime              @updatedAt
}

enum StatusBuku {
  TERSEDIA
  DIPINJAM
  RUSAK
  HILANG
}

model Peminjaman{
  id              Int                 @id @default(autoincrement())
  anggota         Anggota             @relation(fields: [anggota_id], references: [id])
  anggota_id      Int 
  status_pinjam   Status_pinjam       @default(PINJAM)
  detailPinjam    DetailTransaksi[]  
  dibuat          DateTime            @default(now())
  diperbarui      DateTime            @updatedAt
}

enum Status_pinjam {
  PINJAM
  KEMBALI
  BATAL
}

model DetailTransaksi{
  id              Int           @id @default(autoincrement())
  peminjaman      Peminjaman    @relation(fields: [peminjaman_id], references: [id])
  peminjaman_id   Int   
  eksemplar       Eksemplar     @relation(fields: [eksemplar_id], references: [id])
  eksemplar_id    Int           @unique
  dibuat          DateTime      @default(now())
  diperbarui      DateTime      @updatedAt
}

model BukuSumbangan{
  id              Int         @id @default(autoincrement())
  anggota         Anggota     @relation(fields: [anggota_id], references: [id])
  anggota_id      Int
  judul           String
}